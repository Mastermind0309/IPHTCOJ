#include<stdio.h>
#include<stdlib.h>
#include<string.h>

typedef struct _NODE
{
    char color[10];
    struct _NODE *next;
} Node;
// code begins
//#include<stdlib.h>
//#include<string.h>

void insert(Node **head, char *color, int dest)
{
    Node *now = (*head), *tmp;
    for(int id = 0; now->next!=NULL && id!=dest; now = now->next, id++);
    tmp = now->next;
    now->next = (Node*)malloc(sizeof(Node));
    strcpy(now->next->color, color);
    now->next->next = tmp;
}

void erase1(Node **head, int dest)
{
    Node *now = (*head), *prev = NULL;
    for(int id = 0; now->next!=NULL && id!=dest; prev = now, now = now->next, id++);
    if(prev==NULL) return;
    prev->next = now->next;
    free(now);
}

void erase2(Node **head, char *color)
{
    Node *now = (*head), *prev = NULL;
    while(now!=NULL)
    {
        if(!strcmp(now->color, color))
        {
            prev->next = now->next;
            free(now);
            now = prev;
        }
        prev = now;
        now = now->next;
    }
}

void reverse(Node **head, int dest1, int dest2)
{
    Node *now = (*head), *l = NULL, *tmp = NULL;
    int id;
    for(id = 0; now->next!=NULL && id!=dest1; l = now, now = now->next, id++);
    while(now->next!=NULL&&id<dest2)
    {
        tmp = now->next;
        now->next = tmp->next;
        tmp->next = l->next;
        l->next = tmp;
        id++;
    }
}



//code ends


void show(Node **head) {
    Node *now = (*head)->next;
    while(now!=NULL) {
        printf("%s ", now->color);
        now = now->next;
    }
    puts("");
}

int n;
char buf[100];
int num1, num2;
Node *head;

int main() {
    head = (Node*)malloc(sizeof(Node)); // create an empty node
    memset(head->color,'\0',sizeof(head->color));
    head->next = NULL;
    scanf("%d",&n);
    while(n--) {
        scanf("%s",buf);
        if(!strcmp(buf,"insert")) {
            scanf("%s%d",buf,&num1);
            insert(&head, buf, num1); // insert <color> <dest>
        }
        else if(!strcmp(buf,"erase1")) {
            scanf("%d",&num1);
            erase1(&head, num1); // erase1 <dest>
        }
        else if(!strcmp(buf,"erase2")) {
            scanf("%s",buf);
            erase2(&head, buf); // erase2 <color>
        }
        else if(!strcmp(buf,"reverse")) {
            scanf("%d%d",&num1,&num2);
            reverse(&head, num1, num2); // reverse <dest1> <dest2>
        }
        else if(!strcmp(buf,"show")) {
            show(&head);
        }
    }
    return 0;
}
